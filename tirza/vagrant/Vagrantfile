####################################
#
# Provision script for MySQL server.

$mysqlscript = <<-SCRIPT

# Create dir for synced data exchange with host OS.
mkdir /vagrant 2>/dev/null

# Add hostnames to /etc/hosts.
echo "192.168.56.11 mysql mysql.haxor.corp" >> /etc/hosts
echo "192.168.56.12 www www.haxor.corp" >> /etc/hosts

# Fill in the rest here...
yum install -y mariadb-server
firewall-cmd --add-service=mysql --zone=public
firewall-cmd --add-service=mysql --zone=public --permanent
systemctl enable mariadb
systemctl start mariadb; sleep 10

# DVWA db account
mysql -u root << EOF
create database dvwa;
create user dvwa@'%' identified by 'password';
grant all on dvwa.* to dvwa@'%';
flush privileges;
EOF


# End of script.
SCRIPT

####################################
#
# Provision script for Apache server with DVWA.

$wwwscript = <<-SCRIPT
# Create dir for synced data exchange with host OS.
mkdir /vagrant 2>/dev/null

# Add hostnames to /etc/hosts.
echo "192.168.56.11 mysql mysql.haxor.corp" >> /etc/hosts
echo "192.168.56.12 www www.haxor.corp" >> /etc/hosts

# Fill in the rest here...

yum install -y git mariadb httpd php php-mysqlnd php-gd policycoreutils-python-2.5-34.el7.x86_64
firewall-cmd --add-service=http --zone=public
firewall-cmd --add-service=http --zone=public --permanent
firewall-cmd --add-service=https --zone=public
firewall-cmd --add-service=https --zone=public --permanent

setsebool -P httpd_can_network_connect_db 1
semanage fcontext -a -t httpd_sys_rw_content_t "/var/www/html(/.*)?"

git clone https://github.com/digininja/DVWA.git /var/www/html
cp /vagrant/php.ini /etc/php.ini
cp /vagrant/config.inc.php /var/www/html/config

chcon -R -t httpd_sys_rw_content_t /var/www/html/
chown -R apache:apache /var/www/html
chmod -R 777 /var/www/html

systemctl enable httpd
systemctl start httpd

# End of script.
SCRIPT


####################################
# 
# Vagrant main configuration, creating two VMs.
# Both VMs get /vagrant which is synced with this working dir. 
# The working dir contains the Vagrantfile, plus two
# prepared configuration files. 

Vagrant.configure("2") do |config|

  config.vm.box = "generic/centos7"

  config.vm.define :mysql do |mysql|
    if Vagrant.has_plugin?("vagrant-vbguest")
      mysql.vbguest.auto_update = false
    end
    mysql.vm.hostname = "mysql.haxor.corp"
    # Switch these two, if Vagrant complains about "permission denied"
    mysql.vm.network "private_network", ip: "192.168.56.11", virtualbox__intnet: "dvwa"
    #mysql.vm.network "private_network", ip: "192.168.56.11"
    ####
    mysql.vm.synced_folder ".", "/vagrant"
    mysql.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 1
    end
    mysql.vm.provision "setup", type: "shell", inline: $mysqlscript
  end

  config.vm.define :www do |www|
    if Vagrant.has_plugin?("vagrant-vbguest")
      www.vbguest.auto_update = false
    end
    www.vm.hostname = "www.haxor.corp"
    # Switch these two, if Vagrant complains about "permission denied"
    www.vm.network "private_network", ip: "192.168.56.12", virtualbox__intnet: "dvwa"
    #www.vm.network "private_network", ip: "192.168.56.12"
    ###
    www.vm.network "forwarded_port", guest: 80, host: 8080
    www.vm.synced_folder ".", "/vagrant"
    www.vm.provider "virtualbox" do |v|
      v.memory = 512
      v.cpus = 1
    end
    www.vm.provision "setup", type: "shell", inline: $wwwscript
  end

end
